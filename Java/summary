자바 프로그램 실행 원리
  Program
  Java Virtual Machine
  Operating System
  hardware
-------------------------
운영체제 위에 Java Virtual Machine을 실행 시켜서 프로그램을 실행시키는 구조로
운영체제와 상관없이 프로그램을 실행 시킬 수 있다. * 단, 운영체제에 따라 Java Virtual Machine을 다르게 설치해야함

자바로 프로그램을 만들기 위해서는 그에 따른 기본 도구가 필요한데, 이 도구를 가리켜 JDK(Java Developement Kit)이라 한다.
JDK를 설치한 후에 설치된 경로(C:\Program Files\Java)에 jdk로 시작하는 디렉토리 안에 bin 디렉토리가 존재하는데 이곳에는 자바의 개발 및 실행에 필요한 여러가지 도구가 존재한다.
그 중 Javac.exe(자바 컴파일러) 와 Java.exe(자바 런처)는 명령프롬프트에서 어느 경로에서든 실행 가능해야 한다. 그래서 이 두 파일이 저장된 경로를 환경 변수 Path에 추가시켜야 한다.
  * 환경 변수 Path는 윈도우 OS가 명령 프롬프트에서 입력된 실행파일을 찾는 경로의 정보가 되어, 
    명령프롬프트에서 디렉토리 경로에 상관없이 실행되기를 원하는 실행파일이 있다면 그 경로를 환경변수 Path에 등록해야한다.

javac.exe(자바 컴파일러)는 test.java(소스파일)를 Java Virtual Machine이 이해할 수 있는 자바 바이트코드로 변환시켜 test.class 파일을 생성하고
java.exe(자바 런처)는 Java Virtual Machine을 구동하고 그 위에 자바 프로그램이 실행되도록 돕는 프로그램이다.

Vscode에서 Java 사용방법
https://blog.naver.com/twonkang00/222487985798

통합개발환경없이 컴파일 및 실행
메모장에 간단한 코드 작성 후 test.java 파일 저장
명령프롬프트로 해당 파일이 저장된 경로로 들어가서 javac test.java 입력 -> 자바 컴파일
test.class 파일이 생성된 것을 확인 후 java test 입력 -> 실행



System.out.println("1"+2);       -> 출력결과 12
System.out.println("1" + "2");   -> 출력결과 12  // println은 출력할 대상을 + 기호로 묶을 수 있음
System.out.println(7 + 5);       -> 출력결과 12  // println은 수를 대상으로 하는 +는 연산으로 이어져 출력됨
System.out.println("1"+2+5);     -> 출력결과 125  
System.out.println("1"+(2+5));   -> 출력결과 17

주석처리 : /*~*/, //

변수(Variable) : 데이터의 저장과 참조를 위해 "할당된 메모리 공간"에 붙인 이름
 ex) int num; -> 변수 선언 : 정수를 저장할 메모리 공간을 할당하고 이름을 num이라고 붙여서, 메모리 공간에 접근할 때에는 num이라는 이름을 사용하겠습니다.

자료형(Data Type) : 변수에 저장할 데이터의 유형

기본 자료형
 자료형  데이터  크 기  표현 가능 범위
boolean 참,거짓 1byte  true, false
  char   문자   2byte  유니코드 문자
  byte   정수   1byte  -128 ~ 127  
 short   정수   2byte  -32768 ~ 32767
  int    정수   4byte  -2147483648 ~ 2147483647
  long   정수   8byte  -9223372036854775808 ~ 9223372036854775807
 float   실수   4byte  +-(1.40*10^(-45) ~ 3.40*10^38)
 double  실수   8byte  +-(4.94*10^(-324) ~ 1.79*10^308)





